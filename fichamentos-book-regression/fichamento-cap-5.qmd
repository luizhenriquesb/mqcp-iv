---
title: "Fichamento Expositivo - O Modelo de Regressão (capítulo 5)"
subtitle: "Livro: Galdino, Manoel. O Modelo de Regressão (capítulo 5). In: _______. Introdução à Regressão para Ciências Sociais"
format: html
editor: visual
---

::: {style="text-align: justify"}
## 5.1 Modelo de Regressão - Teoria

No livro, o autor considera que "a regressão linear é uma forma de aproximar a CEF (Conditional Expectation Function)".

## 5.2 Esperança Condicional

Diferencia o que é previsão e o que é explicação (causal)

-   Previsão: "quais os provaveis valores de variáveis no futuro, a partir de informações sobre a própria variável e outras no passado".

-   Explicação (causal):\
    -- Causa dos efeitos\
    -- Efeito das causas

O curso pretende apresentar modelos de previsão e modelos de causa dos efeitos.

## 5.3 Conditional Expectation Function (CEF)

Uma boa previsão pode ser medida a partir da noção de Mean Squared Error (MSE). Quando menor o MSE, melhor a previsão. Nesse sentido, a CEF é o melhor preditor.

A dificuldade associada ao uso da CEF é que "nunca sabemos qual a verdadeira função de esperança condicional \[CEF\]". O caminho a ser tomado é tentar "função de esperança condicional".

**Dúvida:** Quais as razões para essas dificuldades?

## 5.4 Objetivos de aprendizagem ao final do capítulo

...

## 5.5 Distribuição dos salários

Para esta seção, serão usados da PNAD Contínua. Para simplificar a exemplificação, será pressuposto que temos uma amostra aleatória dos salários

### Importando a base da PNAD Contínua

```{r, message=FALSE}
# Pacotes utilizados
library(PNADcIBGE)
library(tidyverse)
```

```{r, message=FALSE}
# Importando a base de dados desejada
df <- PNADcIBGE::get_pnadc(year=2017,
                             quarter=4,
                             selected=FALSE,
                             vars=c("Ano", "Trimestre", "UF", 
                                    "V2007", "VD4020", "VD4035", "V1028", "V2010"),
                             design=FALSE,
                             savedir=tempdir())

# Selecionando variáveis de interesse
df <- df |> 
  select(Ano, Trimestre, UF, V2007, VD4020, VD4035, V1028, V2010) |> 
  # Renomeando
  rename(sexo = V2007,
         renda = VD4020,
         horas_trabalhadas = VD4035,
         raca = V2010)
```

### Visualização gráfica da distribuição dos salários

Abaixo, temos um gráfico dos salários por horas trabalhadas.

```{r, message=FALSE}
data <- df |> 
  drop_na() |> 
  filter(renda > 0) |> 
  filter(horas_trabalhadas > 0) |> 
  mutate(salario = renda/(4.5*horas_trabalhadas)) |> 
  mutate(log_salario = log(salario)) |> 
  mutate(genero = as.character(sexo))

data |> 
  ggplot() +
  aes(x = log_salario) +
  geom_density(aes(weight = V1028))
```

## 5.6 Distribuição Condicional dos salários

Podemos pensar que os salários se distribuem desigualmente entre determinados grupos, como entre homens e mulheres. Uma maneira de expressar isso em termos condicionais é:

E\[salário \| gênero = Mulher\]

E\[salário \| gênero = Homenm\]

**Nota:** A base de dados utilizada não é importada nesse capítulo. Além disso, é usada a variável V1028, que não sei o que é (e foi usada no argumento `aes(weight = V1028))`. Também seria importante perguntar sobre como acessar o dicionário.

### Visualização gráfica da distribuição dos salários por gênero

Abaixo, temos um gráfico dos salários por hora trabalhada.

```{r, message=FALSE}
data |> 
  ggplot() +
  aes(x = log_salario) +
  geom_density(aes(weight = V1028, group = genero, colour = genero))
```

Olhando para o salário total.

```{r, message=FALSE}
data |> 
  mutate(log_renda = log(renda)) |> 
  ggplot() +
  aes(x = log_renda) +
  geom_density(aes(weight = V1028, group = genero, colour = genero))
```

## 5.7 Logaritmos

Nesta seção, o autor explica qual a correta interpretação dos logaritmos, artifício comumente utilizado.

Antes de tudo, "a diferença de logaritmos é aproximadamente igual à diferença entre porcentagens". O autor ilustra isso com um exemplo.

```{r, message=FALSE}
data |> 
  group_by(genero) |> 
  summarise(media_salario_hora = mean(salario)) |> 
  pivot_wider(
    names_from = genero,
    values_from = media_salario_hora
  ) |> 
  mutate(dif_perc = 100*((Homem - Mulher)/Mulher)) |> 
  mutate(dif_log = (log(Homem) - log(Mulher))*100) |> 
  knitr::kable()
```

A generalização para a diferença percentual é dada por:

p = 100\*(a - b) / b

A generalização da aproximação da diferença percentual com logaritmo natural é dada por:

p = log(a) - log(b)

A segunda razão... não entendi.

## 5.8 Gênero e Raça

Nesta seção, o autor condiciona o salário ao gênero e à raça.

```{r, message=FALSE}
data |> 
  mutate(log_renda = log(renda),
         raca1 = ifelse(raca %in% c("Preta", "Parda"), "Negra", as.character(raca))) |> 
  group_by(raca1, genero) |> 
  summarise(salario = weighted.mean(salario, weight = V1028)) |> 
  knitr::kable()
```

Podemos expressar o output da tabela acima em termos de esperança condicional:

E\[salário \| gênero, raça\]

## 5.9 Prevendo a partir da esperança condicional

"No gráfico abaixo, as esperanças condicionais para os dois valores de X são dadas pelos triângulos vermelhos. Como vemos, há uma grande variabilidade nos dados de salário em torno da esperança condicional. Isso significa que se só tenho a variável gênero, prever Y a partir da esperança condicional E\[Y\|X\] resulta em um erro grande."

```{r, message=FALSE}
data |> 
  mutate(log_salario = log(salario)) |> 
  ggplot() +
  aes(x = genero, y = log_salario) +
  geom_point() +
  scale_y_continuous(labels = scales::dollar) +
  stat_summary(
    geom = "point",
    fun.y = "mean",
    col = "black",
    size = 3,
    shape = 24,
    fill = "red"
  )
```

### Calculando a MSE

**Definição:** A MSE é definida "como a soma dos erros ao quadrado (para não cancelar)".

```{r, message=FALSE}
mse <- data |> 
  mutate(log_salario = log(salario)) |> 
  group_by(genero) |> 
  mutate(cond_exp = mean(log_salario)) |> 
  ungroup() |> 
  mutate(erro = log_salario - cond_exp) |> 
  select(log_salario, genero, cond_exp, erro)

mse |> 
  head() |> 
  knitr::kable()
```

```{r, message=FALSE}
mse |> 
  summarise(se = sum(erro),
            mse = sum(erro^2)) |> 
  knitr::kable()
```

A MSE diminui ao condiconar em mais variáveis.
:::
